services:
  postgres:
    container_name: ms_pg_sql
    image: postgres:16.1
    environment:
      POSTGRES_USER: ahmad
      POSTGRES_PASSWORD: ahmad
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - microservices-net

  mongodb:
    image: mongo:6.0
    container_name: ms_mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ahmad
      MONGO_INITDB_ROOT_PASSWORD: ahmad
    volumes:
      - mongo:/data/db
    networks:
      - microservices-net
    command: [--auth]

  mongo-express:
    container_name: ms_mongo_express
    image: mongo-express:1-20
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ahmad
      ME_CONFIG_MONGODB_ADMINPASSWORD: ahmad
      ME_CONFIG_MONGODB_SERVER: ms_mongo
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8081:8081"
    networks:
      - microservices-net
    depends_on:
      - mongodb
  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - "1080:1080"  # Web interface
      - "1025:1025"  # SMTP server
    networks:
      - microservices-net

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-net

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:7.4.0
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
    depends_on:
      - zookeeper
    networks:
      - microservices-net

  config-server:
    build: ./services/config-server
    container_name: config_server
    networks:
      - microservices-net
    depends_on:
      - postgres

  eureka-server:
    build: ./services/Eureka-server
    container_name: eureka_server
    ports:
      - "8761:8761"
    networks:
      - microservices-net
    depends_on:
      - config-server

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.2
    ports:
      - "9098:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    networks:
      - microservices-net
    command:
      - "start-dev"

  gateway-server:
    build: ./services/gateway
    container_name: gateway_server
    ports:
      - "8222:8222"
    networks:
      - microservices-net
    depends_on:
      - config-server


  customer-service:
    build: ./services/customer-service
    container_name: ms_customer
    networks:
      - microservices-net
    depends_on:
      - config-server
      - eureka-server
      - mongodb

  product-service:
    build: ./services/product-service
    container_name: ms_product
    networks:
      - microservices-net
    depends_on:
      - config-server
      - eureka-server
      - postgres

  order-service:
    build: ./services/orderService
    container_name: ms_order
    networks:
      - microservices-net
    depends_on:
      - config-server
      - eureka-server
      - postgres
      - kafka1

  payment-service:
    build: ./services/payment-service
    container_name: ms_payment
    networks:
      - microservices-net
    depends_on:
      - config-server
      - eureka-server
      - postgres

  notification-service:
    build: ./services/notification-service
    container_name: ms_notify
    networks:
      - microservices-net
    depends_on:
      - config-server
      - eureka-server
      - mongodb




networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo: